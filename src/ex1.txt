객체지향 언어의 특징

 	1. 상속 
	상속이란 상위개념의 특징을 하위 개념이 물려받는 것을 말한다. 
	하나의 클래스가 가지고 있는 특징(데이터와 함수)들을 그대로 다른 클래스가 물려주고자 할 때 
	상속성의 특징을 사용한다.
	상속을 해주는 부모 클래스는 상위 클래스(Super Class) 또는 기반 클래스(Base Class)라 하며, 
	상속을 받는 자식 클래스를 하위 클래스(Sub Class), 또는 파생 클래스derived class)라고 한다. 
	만약, 자바에서 상속을 받게 해주려면, 새로운 클래스 이름 뒤에 extends와 상속받고자 하는 클래스를 
	입력하면 된다.
	
	상속의 필요성
	- 클래스 사이의 멤버 중복선언 불필요
	- 필드, 메쏘드 재사용으로 클래스가 간결
	- 클래스간 계층적 분류 및 관리 
	자바 상속의 특징
    - 자바에서는 다중 상속을 지원하지 않는다.
    - 자바에서는 상속의 횟수에 제한을 두지 않는다.
    - 자바에서 계측구조의 최상위에 있는 클래스는 java.lang.Object 이다.
	
	------- example01 참고
	
	2. 캡슐화
	객체지향에서 캡슐화는 데이터 구조와 데이터를 다루는 방법을 결합시켜 묶는 것을 말한다.
	특정 객체가 독립적으로 역할을 제대로 수행하기 위해 필요한 데이터와 기능을 하나로 묶어 관리한다.
	객체가 맡은 역할을 수행하기 위한 하나의 목적을 위해 데이터와 기능들을 묶는 것이다.
	또한, 이러한 특징은 다른 의미로 사용되기도 한다. 데이터를 은닉하고 그 데이터를 접근하는
	기능을 노출시키지 않는다는 의미로 사용할 때 캡슐화라는 용어를 사용한다. 즉, 데이터를 기능이라는
	캡슐로 보호한다는 것이다.
	
	------- example02 참고
	
	3. 다형성
	다형성은 같은 타입이지만 실행 결과가 다얗한 객체를 이용할 수 있는 성질을 말한다. 
	코드 측면에서 보면 다형성은 하나의 타입에 여러 객체를 대입함으로써 다양한 기능을 이용할 수 있도록 해준다.
	다형성을 위해 자바는 부모 클래스의 타입 변환을 허용한다. 특 부모 타입에 모든 자식 객체가 대입될 수 있다.
	이것을 이용하여 객체의 부품화가 가능해 진다.
	 	
	 	3-1.오버로딩 
	 	클래스 내에 같은 이름의 메서드를 여러개 선언하는 것을 메서드 오버로딩이라고 한다.
	 	하나의 메서드 이름으로 여러기능을 담는다 하여 붙여진 이름이라 생각할 수 있다.
	 	메서드 오버로딩에는 다음고 같은 규칙이 있다.
	 		3-1-1. 오버로딩한 메소드들은 같은 클래스 내에 존재해야 하며, 메서드명이 같아야 한다..
			3-1-2. 오버로딩한 메소드들은 형(type)이 서로 다르거나 매개변수의 개수가 달라야 한다.
	 
	 	------- example03 참고
	 	
	 	3-2.오버라이딩
	 	메서드 오버라이딩은 상속된 메서드의 내용이 자식 클래스에 맞지 않을 때, 
	 	자식 클래스에서 동일한 메소드를 재정의 하는 것을 말한다.
	 	메서드가 오버라이딩이 되었다면 부모 객체의 메서드는 숨겨지기 때문에
	 	자식 객체에서 메서드를 호출하면 오버라이딩 된 자식 메서드가 호출된다.
	 	메서드 오버라이딩에는 다음고 같은 규칙이 있다.
		 	3-2-1. 부모의 메서드와 동일한 리턴타입, 메서드명, 매개 변수 리스트를 가져야 한다.
		 	3-2-2. 접근제한자가 부모와 같거나 더 넓어야 한다.
		 	3-2-3. 부모에서 한 예외를 제외한 새로운 예외를 throws할 수 없다.
	 	
	 	------- example04 참고
	 	
	 	
	 	
	 	
	 	
	 	